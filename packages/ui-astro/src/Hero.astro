---
import { Image } from "astro:assets";

import { Button } from "@cogisoft/ui-svelte-daisy";

interface Props {
  title: string;
  description: string;
  buttonText: string;

  href?: string;
  modalId?: string;
  overlay?: boolean;
  image: string;

  position?: "left" | "right";
  center?: boolean;
  imageWidth?: number;
  imageHeight?: number;
}

const {
  title,
  description,
  buttonText,
  image,
  href,
  overlay = false,
  center = true,
  position = "right",
  modalId,
  imageWidth = 512,
  imageHeight = 512,
} = Astro.props;

const positionClasses = {
  left: "lg:flex-row",
  right: "lg:flex-row-reverse",
};
---

<section
  class={`hero min-h-screen relative overflow-x-hidden ${!overlay ? "bg-base-200" : ""}`}
  style={overlay && image ? `background-image: url(${image});` : ""}
  data-modal-id={modalId}
>
  {overlay && image && <div class="hero-overlay" />}

  <div
    class={`hero-content flex-col gap-6 w-full ${positionClasses[position]} ${overlay && center ? "text-center" : ""} ${overlay ? "text-neutral-content" : ""}`}
  >
    {
      image && !overlay && (
        <Image
          src={image}
          alt={title}
          width={imageWidth}
          height={imageHeight}
          class="w-full max-w-sm rounded-2xl shadow-2xl"
          loading="eager"
          format="webp"
        />
      )
    }

    <div class="max-w-md space-y-4">
      <h1
        class="text-5xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent"
      >
        {title}
      </h1>
      <p class="py-6 font-semibold text-shadow-lg">
        {description}
      </p>
      <Button href={href} target="_blank" size="lg" class="hero-button">
        {buttonText}
      </Button>
    </div>
  </div>

  <div class="absolute bottom-16 w-full flex justify-center">
    <span class="loading loading-ball loading-xl text-primary"></span>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const heroSections = document.querySelectorAll(".hero");

    heroSections.forEach((section) => {
      const modalId = section.getAttribute("data-modal-id");
      const button = section.querySelector(".hero-button");

      if (modalId && button) {
        const checkModal = setInterval(() => {
          const modalElement = document.getElementById(
            modalId
          ) as HTMLDialogElement;
          if (modalElement) {
            button.addEventListener("click", (e) => {
              e.preventDefault();
              modalElement.showModal();
            });
            clearInterval(checkModal);
          }
        }, 200);
      }
    });
  });
</script>
